========================================
This is the ``2-matrix_divided`` module.
========================================

this module defines how to use ``matrix_divided(matrix, div)`` function.

Usage:
======

``matrix_divided(...)``` function that divides all elements o fa matrix.

::
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided
    >>> matrix = []
    >>> m = matrix
    >>> matrix_divided(m, 3)
    []
    >>> m.append([1, 2, 3])
    >>> matrix_divided(m, 3)
    [[0.33, 0.67, 1.0]]
    >>> matrix_divided(m, "h")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
    >>> matrix_divided(m, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
    >>> matrix_divided(9, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
    >>> matrix_divided(9, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> m.append([1,2,3,5])
    >>> matrix_divided(m, 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
    >>> m
    [[1, 2, 3], [1, 2, 3, 5]]
    >>> m.pop()
    [1, 2, 3, 5]
    >>> m.append("hello")
    >>> matrix_divided(m, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
